# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from . import util
from .task_description import TaskDescription


class TaskUpdate(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, task_id: str = None, description: TaskDescription = None):  # noqa: E501
        """TaskUpdate - a model defined in Swagger

        :param task_id: The task_id of this TaskUpdate.  # noqa: E501
        :type task_id: str
        :param description: The description of this TaskUpdate.  # noqa: E501
        :type description: TaskDescription
        """
        self.swagger_types = {
            'task_id': str,
            'description': TaskDescription
        }

        self.attribute_map = {
            'task_id': 'task_id',
            'description': 'description'
        }

        self._task_id = task_id
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'TaskUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskUpdate of this TaskUpdate.  # noqa: E501
        :rtype: TaskUpdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_id(self) -> str:
        """Gets the task_id of this TaskUpdate.


        :return: The task_id of this TaskUpdate.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id: str):
        """Sets the task_id of this TaskUpdate.


        :param task_id: The task_id of this TaskUpdate.
        :type task_id: str
        """

        self._task_id = task_id

    @property
    def description(self) -> TaskDescription:
        """Gets the description of this TaskUpdate.


        :return: The description of this TaskUpdate.
        :rtype: TaskDescription
        """
        return self._description

    @description.setter
    def description(self, description: TaskDescription):
        """Sets the description of this TaskUpdate.


        :param description: The description of this TaskUpdate.
        :type description: TaskDescription
        """

        self._description = description
