swagger: "2.0"
info:
  description: API for sparkle midpoint
  version: 0.1.0
  title: sparkle-midpoint
paths:
  /:
    get:
      summary: Root endpoint, returns basic server information
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Info"
  /agent:
    post:
      summary: Creates new connector agent
      produces:
        - application/json
      responses:
        201:
          description: Agent created successfully, agent_id is returned
          schema:
            $ref: "#/definitions/Agent"
        400:
          description: Something went wrong, see error.description for more
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Disconnects and removes agenti
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to remove
          schema:
            type: string
            required: true
      responses:
        200:
          description: Agent removed and disconnected successfully
        400:
          description: Something went wrong, agent should be disconnected and removed anyway
          schema:
            $ref: "#/definitions/Error"
  /device:
    get:
      summary: Returns list of connected devices
      produces:
        - application/json
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to use as connector client
          schema:
            type: string
            required: true
      responses:
        200:
          description: Devices fetched successfully
          schema:
            $ref: "#/definitions/Devices"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
  /device/{id}/state:
    get:
      summary: Returns device state
      produces:
        - application/json
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to use as connector client
          schema:
            type: string
            required: true
        - in: path
          name: id
          description: Device id to interact with
          schema:
            type: integer
            required: true
      responses:
        200:
          description: Device state fetched successfully
          schema:
            $ref: "#/definitions/DeviceState"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: Switches device state
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to use as connector client
          schema:
            type: string
            required: true
        - in: path
          name: id
          description: Device id to interact with
          schema:
            type: integer
            required: true
        - in: body
          name: Switch device query info
          schema:
            $ref: "#/definitions/SwitchDeviceStateQuery"
      responses:
        200:
          description: Device state changed successfully
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
  /device/{id}/datasheet:
    get:
      summary: Returns device datasheet
      produces:
        - application/json
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to use as connector client
          schema:
            type: string
            required: true
        - in: path
          name: id
          description: Device id to interact with
          schema:
            type: integer
            required: true
      responses:
        200:
          description: Device datasheet fetched successfully
          schema:
            oneOf:
              - $ref: "#/definitions/SensorDeviceDatasheet"
              - $ref: "#/definitions/SwitchableDeviceDatasheet"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
  /device/{id}/value/{label}:
    get:
      summary: Return value of sensor device
      produces:
        - application/json
      parameters:
        - in: header
          name: Agent-ID
          description: ID of agent to use as connector client
          schema:
            type: string
            required: true
        - in: path
          name: id
          description: Device id to interact with
          schema:
            type: integer
            required: true
        - in: path
          name: label
          description: Label of value to fetch
          schema:
            type: string
            required: true
      responses:
        200:
          description: Device value fetched successfully
          schema:
            $ref: "#/definitions/DeviceValue"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
  /task:
    get:
      summary: Return task informations
      produces:
        - application/json
      parameters:
        - in: header
          name: Task-ID
          description: ID of task to fetch informations
          schema:
            type: string
            required: true
      responses:
        200:
          description: Task found and fetched successfully
          schema:
            $ref: "#/definitions/Task"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Inserts new task
      produces:
        - application/json
      parameters:
        - in: body
          name: Task description
          schema:
            $ref: "#/definitions/TaskDescription"
      responses:
        201:
          description: Task added successfully
          schema:
            $ref: "#/definitions/TaskId"
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Remove existing task
      produces:
        - application/json
      parameters:
        - in: header
          name: Task-ID
          description: ID of task to remove
          schema:
            type: string
            required: true
      responses:
        200:
          description: Task removed successfully
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: Update existing task
      produces:
        - application/json
      parameters:
        - in: header
          name: Task-ID
          description: ID of task to update
          schema:
            type: string
            required: true
        - in: body
          name: Updated task description
          schema:
            $ref: "#/definitions/TaskDescription"
      responses:
        200:
          description: Task updated successfully
        400:
          description: Something went wrong
          schema:
            $ref: "#/definitions/Error"
definitions:
  Task:
    type: object
    properties:
      description:
        $ref: "#/definitions/TaskDescription"
      status:
        type: string
  TaskDescription:
    type: object
    required: ["type", "action"]
    properties:
      type:
        type: string
      action:
        $ref: "#/definitions/Action"
      delay:
        type: integer
      interval:
        type: integer
  Action:
    type: object
    properties:
      name:
        type: string
      device_id:
        type: integer
  TaskId:
    type: object
    properties:
      task_id:
        type: string
  DeviceValue:
    type: object
    properties:
      value:
        type: integer
  SwitchDeviceStateQuery:
    type: object
    properties:
      state:
        $ref: "#/definitions/DeviceState"
  SwitchableDeviceDatasheet:
    type: object
    properties:
      datasheet:
        type: object
        properties:
          states:
            type: array
            items:
              type: integer
  SensorDeviceDatasheet:
    type: object
    properties:
      datasheet:
        type: object
        properties:
          labels:
            type: array
            items:
              type: string
  DeviceState:
    type: object
    properties:
      state_value:
        type: integer
  Devices:
    type: object
    properties:
      devices:
        type: array
        items:
          $ref: "#/definitions/Device"
  Device:
    type: object
    properties:
      id:
        type: integer
      type:
        type: integer
      name:
        type: string
      description:
        type: string
  Agent:
    type: object
    properties:
      id:
        type: string
  Info:
    type: object
    properties:
      name:
        type: string
      version:
        $ref: "#/definitions/Version"
  Version:
    type: object
    required:
      - major
      - minor
      - build
    properties:
      major:
        type: integer
      minor:
        type: integer
      build:
        type: integer
  Error:
    type: object
    properties:
      code:
        type: integer
      description:
        type: string
